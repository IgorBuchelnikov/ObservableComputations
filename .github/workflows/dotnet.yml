name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    # runs-on: self-hosted
    runs-on: ubuntu-latest
    timeout-minutes: 4320
    
    steps:
    - uses: actions/checkout@v2
    - name: Install OpenSSL 1.1
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates
        sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu focal-security main"
        sudo apt-get install -y libssl1.1 libssl-dev
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.416  
    - name: Restore dependencies
      run: dotnet restore ./src
    - name: Build
      run: dotnet build ./src --no-restore --framework netcoreapp3.1 /p:DefineConstants=GitHubActionBuild
    - name: Test
      run: |
        cd ./src/ObservableComputations.Test/
        dotnet restore
        dotnet test --framework netcoreapp3.1 /p:CoverletOutput=TestResults/ /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:DefineConstants=GitHubActionBuild%3BRunOnlyMinimalTestsToCover 
    #   dotnet test --framework netcoreapp3.1 -l "console;verbosity=normal" --filter Name~TestInvokeAsyncAwaitableDispatcherThread /p:CoverletOutput=TestResults/ /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:DefineConstants=GitHubActionBuild%3BRunOnlyMinimalTestsToCover 
    - name: Publish coverage report to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./src/ObservableComputations.Test/TestResults/coverage.netcoreapp3.1.info
    # - name: Upload coverage to Codecov
    #  uses: codecov/codecov-action@v1
    #  with:
    #    token: ${{ secrets.CODECOV_TOKEN }}
    #    files: ./src/ObservableComputations.Test/TestResults/coverage.netcoreapp3.1.info
    #    flags: unittests
    #    name: codecov-umbrella
    #    verbose: true
    #- name: ReportGenerator
    #  uses: danielpalme/ReportGenerator-GitHub-Action@4.8.4
    #  with:
    #    reports: './src/ObservableComputations.Test/TestResults/coverage.netcoreapp3.1.info' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
    #    targetdir: 'src/ObservableComputations.Test/TestReport' # REQUIRED # The directory where the generated report should be saved.
    #    reporttypes: 'HtmlInline;lcov' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummar
